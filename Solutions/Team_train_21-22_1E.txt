#include<bits/stdc++.h>

using namespace std;

const int MAXN = 1e5+5;

//int size[300001];
int par[MAXN];


int find(int v) {
    if (v==par[v]) return v; else return par[v]=find(par[v]);
}

void union1(int v, int u) {
    v = find(v);
    u = find(u);
    par[v]=u;
}




int main() {

    ios_base::sync_with_stdio(false);
    cin.tie();

    int n,m;
    cin>>n>>m;

    for(int i=1;i<=n;i++) {
        par[i]=i;
    }
    bool is_c = 0;
    vector<pair<int,int> > v;
    for(int i=0;i<m;i++) {
        int a,b,t;
        cin>>a>>b>>t;
        if (t==1) {
            if (find(a)==find(b)) is_c = 1; else union1(a,b);
        } else {
            v.push_back({a,b});
        }
    }

    if (is_c) {
        cout<<"NO"<<endl;
        return 0;
    }

    vector<pair<int,int> > todel;
    for(int i=0;i<v.size();i++) {
        int a = v[i].first, b = v[i].second;
        if (find(a)==find(b)) {
            todel.push_back({a,b});
        } else {
            union1(a,b);
        }
    }

    cout<<"YES"<<endl;
    cout<<todel.size()<<endl;
    for(int i=0;i<todel.size();i++) {
        cout<<todel[i].first<<" "<<todel[i].second<<endl;
    }
    return 0;
}
